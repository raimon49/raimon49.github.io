<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Steel Dragon 14106</title><link>https://raimon49.github.io/</link><description>スチールドラゴンアイシテル</description><lastBuildDate>Mon, 03 Feb 2020 20:35:25 +0900</lastBuildDate><item><title>dotfilesのためのAcceptance Testをgossで宣言的に記述する</title><link>https://raimon49.github.io/2020/02/03/write-acceptance-tests-for-dotfiles-with-goss.html</link><description>&lt;p&gt;Gitでdotfilesを管理している時のAcceptance TestをCLIツールgossで宣言的に管理する手順について&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Mon, 03 Feb 2020 20:35:25 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2020-02-03:/2020/02/03/write-acceptance-tests-for-dotfiles-with-goss.html</guid><category>Git</category><category>CI</category><category>Git</category><category>Go</category></item><item><title>Co-authored-by署名を手軽に付与するためのGit alias</title><link>https://raimon49.github.io/2019/12/08/git-alias-for-co-authored-by.html</link><description>&lt;p&gt;Gitコミット時に付与するCo-authored-by署名のために設定するGit aliasと、その効果について。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 08 Dec 2019 11:04:40 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2019-12-08:/2019/12/08/git-alias-for-co-authored-by.html</guid><category>Git</category><category>Git</category><category>GitHub</category></item><item><title>Twineを使ったPyPI/TestPyPIへのパッケージ更新</title><link>https://raimon49.github.io/2018/03/29/register-package-to-pypi-and-testpypi-by-twine.html</link><description>&lt;p&gt;パッケージ公開ユーティリティTwineでPyPI/TestPyPIにPythonパッケージを登録・更新する方法&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Thu, 29 Mar 2018 10:53:52 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2018-03-29:/2018/03/29/register-package-to-pypi-and-testpypi-by-twine.html</guid><category>Python</category><category>Python</category></item><item><title>pip showコマンドで「License: UNKNOWN」と表示されるライブラリのライセンスを調べるには</title><link>https://raimon49.github.io/2018/02/18/check-license-as-unknown-with-pip-show-command.html</link><description>&lt;p&gt;LicenseをClassifiersから取得できるツールpip-licensesの紹介&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 18 Feb 2018 12:52:44 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2018-02-18:/2018/02/18/check-license-as-unknown-with-pip-show-command.html</guid><category>Python</category><category>Python</category></item><item><title>PythonパッケージをPyPIにアップロードする際にMarkdownをreSTに変換</title><link>https://raimon49.github.io/2018/01/30/convert-to-rst-from-markdown-on-demand.html</link><description>&lt;p&gt;PyPIサーバーではreSTフォーマットでなければHTML描画されないため、Markdownフォーマットの文書をオンデマンドでreSTに変換してアップロードする方法&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Tue, 30 Jan 2018 17:52:24 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2018-01-30:/2018/01/30/convert-to-rst-from-markdown-on-demand.html</guid><category>Python</category><category>GitHub</category><category>Markdown</category><category>Python</category></item><item><title>PyTodoistからTodoistで管理された自分のタスクにアクセス</title><link>https://raimon49.github.io/2017/12/30/access-my-task-with-pytodoist.html</link><description>&lt;p&gt;Todoist APIで提供されるタスク操作機能に対してPyTodoistを経由してアクセスする方法&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 30 Dec 2017 15:04:29 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-12-30:/2017/12/30/access-my-task-with-pytodoist.html</guid><category>Python</category><category>Python</category></item><item><title>github-markdown-toc.goでMarkdown文書の目次を自動生成</title><link>https://raimon49.github.io/2017/11/27/generate-toc-for-markdown-document.html</link><description>&lt;p&gt;github-markdown-tocのGo実装を使いMarkdown文書の目次を自動生成する方法&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Mon, 27 Nov 2017 23:17:12 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-11-27:/2017/11/27/generate-toc-for-markdown-document.html</guid><category>Go</category><category>Go</category><category>Markdown</category></item><item><title>Markdown lint toolでMarkdownファイルの構文のLintをチェック</title><link>https://raimon49.github.io/2017/10/29/lint-markdown-with-ruby-gems.html</link><description>&lt;p&gt;Markdown lint toolの利用方法を設定カスタマイズ方法、CIサービスとの連携方法について。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 29 Oct 2017 21:04:20 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-10-29:/2017/10/29/lint-markdown-with-ruby-gems.html</guid><category>Ruby</category><category>CI</category><category>Git</category><category>Markdown</category><category>Ruby</category></item><item><title>Ubuntu 16.04 LTSにDocker CE stable最新版をインストール</title><link>https://raimon49.github.io/2017/09/25/install-docker-ce-in-ubuntu1604.html</link><description>&lt;p&gt;Ubuntu 16.04 LTSにaptパッケージ版のDocker CE stable最新版をインストールしてsudo不要で使えるようにする&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Mon, 25 Sep 2017 23:29:44 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-09-25:/2017/09/25/install-docker-ce-in-ubuntu1604.html</guid><category>Linux</category><category>Ubuntu</category></item><item><title>swiftenvを利用してLinux環境でSwiftモジュール開発の準備</title><link>https://raimon49.github.io/2017/08/29/start-develop-swift-in-linux-with-swfitenv.html</link><description>&lt;p&gt;Linux環境でSwiftモジュール開発を始めるための準備としてswiftenvを導入した時の覚え書き&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Tue, 29 Aug 2017 21:49:37 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-08-29:/2017/08/29/start-develop-swift-in-linux-with-swfitenv.html</guid><category>Linux</category><category>Swift</category><category>Ubuntu</category></item><item><title>pip.confファイルをUnix系OS/macOSどちらでも同じ場所に置く</title><link>https://raimon49.github.io/2017/07/24/compatible-pip-conf.html</link><description>&lt;p&gt;pipのユーザー毎に設置する設定ファイルを一つの場所で管理する&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Mon, 24 Jul 2017 20:13:12 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-07-24:/2017/07/24/compatible-pip-conf.html</guid><category>Python</category><category>Python</category></item><item><title>Google code-prettifyの使い方（2017年6月現在）</title><link>https://raimon49.github.io/2017/06/24/usage-google-code-prettify.html</link><description>&lt;p&gt;2017年6月現在のGoogle code-prettifyをお手軽に導入する方法&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 24 Jun 2017 23:59:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-06-24:/2017/06/24/usage-google-code-prettify.html</guid><category>JavaScript</category><category>JavaScript</category></item><item><title>python-prompt-toolkitを使ってお手軽自動補完</title><link>https://raimon49.github.io/2017/05/29/auto-suggest-by-python-prompt-toolkit.html</link><description>&lt;p&gt;python-prompt-toolkitを使ってお手軽に高機能な対話型CUIを実現する&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Mon, 29 May 2017 23:42:44 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-05-29:/2017/05/29/auto-suggest-by-python-prompt-toolkit.html</guid><category>Python</category><category>Python</category></item><item><title>VimでPipfileを構文ハイライトされた状態で編集</title><link>https://raimon49.github.io/2017/04/29/support-syntax-for-pipfile.html</link><description>&lt;p&gt;Pythonの新しい依存パッケージ管理ファイルフォーマットであるPipfileを構文ハイライトされた状態で編集する方法&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 29 Apr 2017 20:39:28 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-04-29:/2017/04/29/support-syntax-for-pipfile.html</guid><category>Vim</category><category>Python</category><category>Vim</category></item><item><title>manコマンドで表示されるドキュメントの色付けをカスタマイズ</title><link>https://raimon49.github.io/2017/03/31/man-with-colored-pager.html</link><description>&lt;p&gt;manコマンドで表示されるドキュメントの色付けを見易く設定する方法について。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Fri, 31 Mar 2017 17:35:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-03-31:/2017/03/31/man-with-colored-pager.html</guid><category>zsh</category><category>zsh</category></item><item><title>Ubuntu 16.04 LTSにシステムワイドでNeovimとPythonパッケージneovimをインストール</title><link>https://raimon49.github.io/2017/02/25/install-neovim-in-ubuntu1604.html</link><description>&lt;p&gt;Ubuntu 16.04 LTSにaptパッケージ版のNeovimとPyPIから配信されているPythonクライアントをインストールし、Neovim用のプラグインであるdeopleteが使えるようにする&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 25 Feb 2017 22:42:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-02-25:/2017/02/25/install-neovim-in-ubuntu1604.html</guid><category>Vim</category><category>Python</category><category>Ubuntu</category><category>Vim</category></item><item><title>SemVerを採用したソフトウェアの更新でビルドが壊される時、メジャーバージョン番号を上げなければならない</title><link>https://raimon49.github.io/2017/01/31/must-increment-the-major-version-number.html</link><description>&lt;p&gt;SemVerを採用したソフトウェアに利用者の期待するバージョン更新と異なる更新が行われると、ビルドが破壊されたり混乱を招く。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Tue, 31 Jan 2017 20:23:10 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2017-01-31:/2017/01/31/must-increment-the-major-version-number.html</guid><category>Node</category><category>CI</category><category>JavaScript</category><category>Node</category></item><item><title>Swift CLI環境におけるTravis CIを利用した継続的Lint</title><link>https://raimon49.github.io/2016/05/05/continuous-lint-at-swift-cli.html</link><description>&lt;p&gt;Swift CLIで動作させているコードの継続的LintをTravis CIで行う&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Thu, 05 May 2016 13:02:17 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2016-05-05:/2016/05/05/continuous-lint-at-swift-cli.html</guid><category>Xcode</category><category>CI</category><category>Swift</category><category>Xcode</category></item><item><title>Swiftで書かれたiOSアプリを実機デバッグ実行時に「image not found」エラーとなる場合の対処</title><link>https://raimon49.github.io/2016/03/20/error-at-swift-app-with-ios-device.html</link><description>&lt;p&gt;Swiftで書かれたiOSアプリの実機デバッグ実行がエラーとなる場合のXcode設定について&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 20 Mar 2016 13:53:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2016-03-20:/2016/03/20/error-at-swift-app-with-ios-device.html</guid><category>iOS</category><category>Swift</category><category>Xcode</category><category>iOS</category></item><item><title>OS X El CapitanでNoSleep代替としてInsomniaXで蓋を閉じて自動スリープを防止する</title><link>https://raimon49.github.io/2016/02/17/no-sleep-with-el-capitan.html</link><description>&lt;p&gt;El Capitanで「NoSleep Kernel Extension is not loaded.」で機能しないため代替としてInsomniaXを導入し、MacBookの蓋を閉じた時の自動スリープを防止する&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Wed, 17 Feb 2016 22:29:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2016-02-17:/2016/02/17/no-sleep-with-el-capitan.html</guid><category>Mac</category><category>Mac</category></item><item><title>CodecovでPythonコードリポジトリのコードカバレッジを継続的に計測する</title><link>https://raimon49.github.io/2016/01/17/continuous-code-coverage-with-codecov.html</link><description>&lt;p&gt;CodecovとTravis CIを連携することで、CodecovでPythonコードリポジトリのコードカバレッジを継続的に計測できる。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 17 Jan 2016 13:56:18 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2016-01-17:/2016/01/17/continuous-code-coverage-with-codecov.html</guid><category>Python</category><category>CI</category><category>GitHub</category><category>Python</category></item><item><title>Pythonでオブジェクトを返す関数/メソッドをdoctestする</title><link>https://raimon49.github.io/2015/11/18/doctest-with-return-object.html</link><description>&lt;p&gt;オブジェクトを返す関数やメソッドをdoctestする方法。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Wed, 18 Nov 2015 21:19:59 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-11-18:/2015/11/18/doctest-with-return-object.html</guid><category>Python</category><category>Python</category></item><item><title>Ruby/Pythonで依存パッケージをローカルインストールして開発環境構築やCIビルドを高速化する</title><link>https://raimon49.github.io/2015/11/08/ci-with-local-packages.html</link><description>&lt;p&gt;RubyGemsやPython PackageをGitリポジトリで管理しておくことで、ローカルインストールして開発環境構築やCIビルドが高速化できる。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 08 Nov 2015 15:45:17 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-11-08:/2015/11/08/ci-with-local-packages.html</guid><category>Git</category><category>CI</category><category>Git</category><category>GitHub</category><category>Ruby</category><category>Python</category></item><item><title>『Pythonプロフェッショナルプログラミング 第2版』のWebアプリケーション課題をGitHubで作りTest PyPIで公開する</title><link>https://raimon49.github.io/2015/10/31/pypro2-guestbook-webapp-with-github.html</link><description>&lt;p&gt;『Pythonプロフェッショナルプログラミング 第2版』のWebアプリケーション課題にアレンジを加えてBitbucketではなくGitHubに穂スティングした時の記録。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 31 Oct 2015 08:52:35 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-10-31:/2015/10/31/pypro2-guestbook-webapp-with-github.html</guid><category>Python</category><category>CI</category><category>Git</category><category>GitHub</category><category>Python</category></item><item><title>Travis CIのビルドコンテナ内で最新のpipを使う</title><link>https://raimon49.github.io/2015/10/11/use-latest-pip-in-travis.html</link><description>&lt;p&gt;Travis CIでビルドを走らせる際に古いバージョンのpipがインストールされていて回避したい時の方法。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 11 Oct 2015 20:31:05 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-10-11:/2015/10/11/use-latest-pip-in-travis.html</guid><category>Python</category><category>CI</category><category>Python</category></item><item><title>Pythonのfunctoolsでターミナルに色付きテキスト出力する関数をお手軽作成する</title><link>https://raimon49.github.io/2015/08/07/python-puts-color-sequence-with-functools.html</link><description>&lt;p&gt;PythonでANSIカラーシーケンスを出力するFabricでの実装例とfunctoolsを使いお手軽に実現する方法&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Fri, 07 Aug 2015 19:47:05 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-08-07:/2015/08/07/python-puts-color-sequence-with-functools.html</guid><category>Python</category><category>Fabric</category><category>Python</category></item><item><title>SwiftでCocoa Delegation Patternに合わせたカスタムビューのProtocolを設計する</title><link>https://raimon49.github.io/2015/07/12/swift-cocoa-delegation-pattern.html</link><description>&lt;p&gt;カスタムビューを定義した時に通知するProtocolの設計をCocoa Delegation Patternに合わせる&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 12 Jul 2015 12:43:22 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-07-12:/2015/07/12/swift-cocoa-delegation-pattern.html</guid><category>iOS</category><category>Objective-C</category><category>Swift</category><category>iOS</category></item><item><title>VolleyライブラリNetworkImageViewのタイムアウト時間を長くする</title><link>https://raimon49.github.io/2015/07/05/override-volley-imageloader.html</link><description>&lt;p&gt;VolleyライブラリNetworkImageViewのタイムアウト時間がデフォルト2500ミリ秒に設定されているのを書き換える&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 05 Jul 2015 15:08:04 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-07-05:/2015/07/05/override-volley-imageloader.html</guid><category>Android</category><category>Android</category><category>Android Studio</category><category>Java</category></item><item><title>SwiftでHTTPS通信時に自己認証証明書の警告によるエラーを無視させる</title><link>https://raimon49.github.io/2015/05/27/ignore-verify-self-signed-certificate.html</link><description>&lt;p&gt;SwiftでNSURLRequestクラスのallowsAnyHTTPSCertificateForHostメソッドの書き換えを実現し、証明書の警告エラーを回避する&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Wed, 27 May 2015 23:04:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-05-27:/2015/05/27/ignore-verify-self-signed-certificate.html</guid><category>iOS</category><category>Objective-C</category><category>Swift</category><category>iOS</category></item><item><title>コミット時にMarkdownファイルの構文が正しいかnpm testでチェックさせる</title><link>https://raimon49.github.io/2015/05/01/lint-markdown-at-commit.html</link><description>&lt;p&gt;Hexoで作成したブログのリポジトリに対してコミット時にMarkdownファイルの構文チェックを走らせ、失敗時にはコミットを中止させるようにした&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Fri, 01 May 2015 20:05:32 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-05-01:/2015/05/01/lint-markdown-at-commit.html</guid><category>Node</category><category>CI</category><category>Git</category><category>JavaScript</category><category>Markdown</category><category>Node</category></item><item><title>静的ページジェネレータHexoで作成したブログをGitHub Pagesで公開する</title><link>https://raimon49.github.io/2015/04/25/create-blog-with-hexo.html</link><description>&lt;p&gt;静的ページジェネレータHexoを使ってブログを作る時の手順&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 25 Apr 2015 18:02:22 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-04-25:/2015/04/25/create-blog-with-hexo.html</guid><category>Node</category><category>GitHub</category><category>JavaScript</category><category>Hexo</category><category>Node</category><category>Pelican</category></item><item><title>OS XでAndroid Studioインストール後の起動が進まなかった時の対処</title><link>https://raimon49.github.io/2015/04/19/android-studio-does-not-launching.html</link><description>&lt;p&gt;Android Studioインストール後の起動が進まなかった時、Proxy設定の変更で解消した。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 19 Apr 2015 11:19:19 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-04-19:/2015/04/19/android-studio-does-not-launching.html</guid><category>Android</category><category>Android</category><category>Android Studio</category><category>Mac</category></item><item><title>Gitのsubmoduleをお手軽に削除する</title><link>https://raimon49.github.io/2015/04/04/git-submodule-deinit.html</link><description>&lt;p&gt;Gitのsubmoduleをお手軽に削除するdeinitコマンドについて&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 04 Apr 2015 21:00:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-04-04:/2015/04/04/git-submodule-deinit.html</guid><category>Git</category><category>Git</category><category>Pelican</category></item><item><title>iOSアプリのコーディング規約を考える時はGoogleよりもNYTimesのObjective-Cスタイルガイドを参考にすべき</title><link>https://raimon49.github.io/2015/03/21/review-nytimes-objective-c-style-guide.html</link><description>&lt;p&gt;GitHubで公開されているNYTimesのNYTimesスタイルガイドについて参考になる点、自分とは少し考え方が異なる点を覚え書き。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 21 Mar 2015 19:36:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-03-21:/2015/03/21/review-nytimes-objective-c-style-guide.html</guid><category>iOS</category><category>iOS</category><category>Objective-C</category><category>Xcode</category></item><item><title>svn:ignoreの無視ファイル設定を.gitignoreに移行する</title><link>https://raimon49.github.io/2015/01/27/migrate-ignore-from-svn-to-git.html</link><description>&lt;p&gt;Subversionリポジトリからの変換・移行ツールsvn2gitでの移行時に無視ファイル設定も移行したい。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Tue, 27 Jan 2015 23:13:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2015-01-27:/2015/01/27/migrate-ignore-from-svn-to-git.html</guid><category>Git</category><category>Git</category><category>Subversion</category></item><item><title>iOS 8では「Appのバックグラウンド更新」がOFFでもバックグラウンドで位置情報の更新は通知される</title><link>https://raimon49.github.io/2014/12/27/ios8-location-updates.html</link><description>&lt;p&gt;iOS 7とiOS 8ではバックグラウンドで位置情報取得する時の「Appのバックグラウンド更新」設定による影響が異なる。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sat, 27 Dec 2014 15:17:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-12-27:/2014/12/27/ios8-location-updates.html</guid><category>iOS</category><category>Objective-C</category><category>Xcode</category><category>iOS</category></item><item><title>Xcode 6.xからNSObjectはdescriptionプロパティを持っている</title><link>https://raimon49.github.io/2014/12/23/nsobject-has-description-property.html</link><description>&lt;p&gt;Xcode 6.xではNSObject.hでdescriptionプロパティが宣言されており、全てのNSObjectを継承したオブジェクトがこのプロパティを持っている。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Tue, 23 Dec 2014 19:06:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-12-23:/2014/12/23/nsobject-has-description-property.html</guid><category>Xcode</category><category>Mac</category><category>Objective-C</category><category>Xcode</category></item><item><title>Java 7でオブジェクト同士を比較する時のnullチェックはユーティリティメソッドに任せられる</title><link>https://raimon49.github.io/2014/12/08/java7-objects-equals.html</link><description>&lt;p&gt;Java 7から追加されたjava.util.Objects.equals(arg1, arg2)について。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Mon, 08 Dec 2014 21:55:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-12-08:/2014/12/08/java7-objects-equals.html</guid><category>Java</category><category>Java</category></item><item><title>PelicanにDisqusでコメント欄を埋め込む</title><link>https://raimon49.github.io/2014/11/20/embed-comments-in-pelican.html</link><description>&lt;p&gt;Pelicanで構築したブログのコメント欄としてコメントサービスDisqusを埋め込む方法について。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Thu, 20 Nov 2014 23:12:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-11-20:/2014/11/20/embed-comments-in-pelican.html</guid><category>Python</category><category>Pelican</category><category>Python</category></item><item><title>Homebrewでインストール済みパッケージが更新後に「already installed, it's just not linked」と言われた時の対応</title><link>https://raimon49.github.io/2014/11/18/homebrew-bottle-mercurial.html</link><description>&lt;p&gt;Homebrewでインストール済みパッケージが更新後に「already installed, it's just not linked」と言われた時に解消した方法のメモ。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Tue, 18 Nov 2014 23:05:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-11-18:/2014/11/18/homebrew-bottle-mercurial.html</guid><category>Mac</category><category>Homebrew</category><category>Mac</category><category>Mercurial</category></item><item><title>Fabricで複数ホストに対して実行した結果を使って何かする</title><link>https://raimon49.github.io/2014/11/16/fabric-multiple-result.html</link><description>&lt;p&gt;Fabricで複数ホストに対して実行した結果を使って何かしたい時はexecute()&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 16 Nov 2014 18:45:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-11-16:/2014/11/16/fabric-multiple-result.html</guid><category>Python</category><category>Fabric</category><category>Python</category></item><item><title>Xcode 6に付属しているSwiftのREPLを使う</title><link>https://raimon49.github.io/2014/11/12/xcode-swift-repl.html</link><description>&lt;p&gt;Xcode 6にはSwiftのREPLが付属しておりターミナル上で簡単に動作を試せる&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Wed, 12 Nov 2014 23:45:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-11-12:/2014/11/12/xcode-swift-repl.html</guid><category>Xcode</category><category>Mac</category><category>Swift</category><category>Xcode</category></item><item><title>zshでファイル名グロブを展開した後にアンドゥできる事を知った</title><link>https://raimon49.github.io/2014/11/11/zsh-undo-key-binding.html</link><description>&lt;p&gt;zshでファイル名グロブの記号をTabキー展開した後に記号に戻す方法があった。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Tue, 11 Nov 2014 18:45:00 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-11-11:/2014/11/11/zsh-undo-key-binding.html</guid><category>zsh</category><category>zsh</category></item><item><title>pipのrequirements.txtについて</title><link>https://raimon49.github.io/2014/11/10/requirements-text-file.html</link><description>&lt;p&gt;Pythonのパッケージ管理ツールpipで利用できるrequirements.txtの仕様について。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Mon, 10 Nov 2014 23:43:37 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-11-10:/2014/11/10/requirements-text-file.html</guid><category>Python</category><category>Python</category></item><item><title>技術ブログを静的ページジェネレータPelicanで始めることにした</title><link>https://raimon49.github.io/2014/11/09/start-tech-blog-by-pelican.html</link><description>&lt;p&gt;技術ブログを静的ページジェネレータPelicanで始めることにしたのでメモ&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">raimon</dc:creator><pubDate>Sun, 09 Nov 2014 18:44:37 +0900</pubDate><guid isPermaLink="false">tag:raimon49.github.io,2014-11-09:/2014/11/09/start-tech-blog-by-pelican.html</guid><category>Python</category><category>GitHub</category><category>Pelican</category><category>Python</category></item></channel></rss>